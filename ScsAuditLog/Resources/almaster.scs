<div ng-controller="alcontroller as vm" ng-click="vm.mainClick($event)">
	<div>
		<div>
			<a href="#" class="btn" ng-click="vm.resetPanes('viewQuery')">Filter</a>
		</div>
		<div ng-show="vm.panes.viewQuery" ng-click="vm.autoComplete = false" class="alpane">
			<div class="almenu">
				<fieldset>
					<legend>Date Range</legend>
					<label for="alStartDate">Start Date</label>
					<input type="text" id="alStartDate" ng-model="vm.start"/>
					<label for="alEndDate">End Date</label>
					<input type="text" id="alEndDate" ng-model="vm.end"/>
				</fieldset>
				<span ng-click="vm.filterType='none'" ng-class="['tab', {alactive: vm.filterType==='none' || !vm.filterType}]">No Additional Filters</span>
				<span ng-click="vm.filterType='text'" ng-class="['tab', {alactive: vm.filterType==='text'}]">Content Filter</span>
				<span ng-click="vm.filterType='item'" ng-class="['tab', {alactive: vm.filterType==='item'}]">Item Filter</span>
				<span ng-click="vm.filterType='user'" ng-class="['tab', {alactive: vm.filterType==='user'}]">User Filter</span>
				<div class="alqueryfilterpane">
					<div class="alqueryfilter" ng-if="!vm.filterType || vm.filterType === 'none'">
						<a class="btn" ng-click="vm.query('*', 'content')">Query Without Additional Filters</a>
					</div>
					<div class="alqueryfilter" ng-if="vm.filterType === 'text'">
						<span>Text to filter by</span>
						<input id="alTextSearch" onfocus="this.select();" ng-model="vm.queryText" ng-keyup="vm.queryAutoComplete($event)" />
						<a class="btn" ng-click="vm.query(vm.queryText, 'content')">Query</a>
						<ul ng-if="vm.autoComplete" class="autoCompletePane">
							<li ng-repeat="(key, value) in vm.autoComplete" value="{{key}}" ng-click="vm.query(key, 'content')">{{value}} - {{key}}</li>
						</ul>
					</div>
					<div class="alqueryfilter" ng-show="vm.filterType === 'item'">
						<alcontenttree parent="''" events="vm.treeEvents" ></alcontenttree>
					</div>
					<div class="alqueryfilter" ng-if="vm.filterType === 'user'">
						<span>User to filter by</span>
						<select ng-model="vm.user" ng-change="vm.query(vm.user, 'user')">
							<option ng-repeat="user in vm.users" value="{{user}}" >{{user}}</option>
						</select>
					</div>
				</div>
			</div>
		</div>
		<div class ="alpane alfilter">
			<h3>Events</h3>
			<div class="almenu" >
				<div class="graph-colors">
					<div>
						<input type="checkbox" checked ng-click="vm.selectAll($event)"/>
						Select all
					</div>
					<div ng-repeat="(key, value) in vm.eventList">
						<input type="checkbox" ng-model="vm[key]" ng-click="vm.query(vm.lastQuery, vm.field)"/>
						<span ng-style="{'background-image': 'linear-gradient(transparent 3px,'+value.Color+' 3px,'+value.Color+' 10px,transparent 10px)'}">&nbsp;&nbsp;&nbsp;</span>&nbsp;{{value.Label}}
					</div>
				</div>
			</div>

		</div>
		<div class="graph">
			<svg id="visualisation" width="750" height="400"></svg>

		</div>

		<div ng-if="vm.events && vm.totalPages > 0">
			<h3>
					page {{vm.page + 1}} out of {{vm.totalPages}}
			</h3>
			<div ng-if="vm.totalPages > 1">
				<a ng-if="vm.pagination.back" ng-click="vm.getData(0)" class="btn arrow">
					<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="25px" height="20px" viewBox="-15 0 80 80" xml:space="preserve">
    <polyline fill="none" stroke="#000000" stroke-width="6" stroke-linecap="round" stroke-linejoin="round" points="
	30.63,75.8 -15.375,38.087 30.63,0.375 "></polyline>
		 <polyline fill="none" stroke="#000000" stroke-width="6" stroke-linecap="round" stroke-linejoin="round" points="
	60.63,75.8 15.375,38.087 60.63,0.375 "></polyline>
  </svg>
				</a>
				<a ng-if="vm.pagination.back" ng-click="vm.getData(vm.page-1)" class="btn arrow">
					<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="15px" height="20px" viewBox="0 0 50 80" xml:space="preserve">
    <polyline fill="none" stroke="#000000" stroke-width="6" stroke-linecap="round" stroke-linejoin="round" points="
	45.63,75.8 0.375,38.087 45.63,0.375 "></polyline>
  </svg>
				</a>
				<a ng-repeat="page in vm.pagination.pages" ng-click="vm.getData(page)" ng-style="page == vm.page ? {'border':'thin solid white', 'background-color':'white'} : {}" class="btn">{{page+1}}</a>
				<a ng-if="vm.pagination.next" ng-click="vm.getData(vm.page+1)" class="btn arrow">
					<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="15px" height="20px" viewBox="0 0 50 80" xml:space="preserve">
    <polyline fill="none" stroke="#000000" stroke-width="6" stroke-linecap="round" stroke-linejoin="round" points="
	0.375,0.375 45.63,38.087 0.375,75.8 "></polyline>
  </svg>
				</a>
				<a ng-if="vm.pagination.next" ng-click="vm.getData(vm.totalPages-1)" class="btn arrow">
					<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="25px" height="20px" viewBox="-15 0 80 80" xml:space="preserve">
    <polyline fill="none" stroke="#000000" stroke-width="6" stroke-linecap="round" stroke-linejoin="round" points="
	-15.375,0.375 30.63,38.087 -15.375,75.8"></polyline>
		 <polyline fill="none" stroke="#000000" stroke-width="6" stroke-linecap="round" stroke-linejoin="round" points="
	15.375,0.375 60.63,38.087 15.375,75.8"></polyline>
  </svg>
				</a>
				<div class="jumpto">
					Jump to page:
					<input type="number" ng-model="vm.pageNum" min="1" step="1" max="{{vm.totalPages}}" ng-change="vm.getData(vm.pageNum-1)"></input>
				</div>
			</div>
			
		</div>
		<div ng-if="!vm.events">
			<a class="btn" ng-click="vm.getData(0)">Get Details</a>
		</div>
		<div ng-if="vm.events && vm.totalPages > 0">
			<table>
				<tr>
					<th>Time</th>
					<th>User</th>
					<th>Type</th>
					<th>Details</th>
          <th>Language</th>
        </tr>
				<tr ng-repeat="item in vm.events"  ng-class="{even: $even, odd: $odd}">
					<td ng-bind="item.TimeStamp | date:'h:mm ss a MMM, dd yyyy'"></td>
					<td ng-bind="item.User"></td>
					<td ng-style="{'border-left':'solid 10px ' + vm.eventList[item.EventId].Color}">{{vm.eventList[item.EventId].Label}}</td>
					<td>
						<a class="lite-btn" ng-click="vm.resetPanes(item.Uid)">See Details</a>
						<div ng-attr-id="{{'note' + item.Uid}}" ng-class="{'alvisible': vm.panes[item.Uid], 'alinvisible' : !vm.panes[item.Uid]}" class="alpane alnote">
							<h5 ng-if="item.User" class="aldetailheading">User</h5>
							<div ng-if="item.User" class="aldetailpane">{{item.User}}</div>
							<h5 ng-if="item.Path" class="aldetailheading">Path</h5>
							<div ng-if="item.Path" class="aldetailpane">{{item.Path}}</div>
							<h5 ng-if="item.Database" class="aldetailheading">Database</h5>
							<div ng-if="item.Database" class="aldetailpane">{{item.Database}}</div>
							<h5 ng-if="item.Note" class="aldetailheading">Note</h5>
							<div ng-if="item.Note" ng-bind-html="item.Note | sanitize"></div>
            </div>
					</td>
            <td ng-bind="item.Language"></td>
					<td>
						<a ng-if="item.Id" href="/sitecore/shell/Applications/Content%20Editor.aspx?sc_content=master&fo={{item.Id}}" class="btn fancybox fancybox.iframe">Edit Item</a>
					</td>
				</tr>
			</table>
		</div>

	</div>
</div>